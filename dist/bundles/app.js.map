{"version":3,"file":"app.js","sources":["webpack:///src/js/app.js","webpack:///src/js/actions/ArtActions.js","webpack:///src/js/actions/index.js","webpack:///src/js/components/App.js","webpack:///src/js/components/ArtPage.js","webpack:///src/js/components/Container.js","webpack:///src/js/components/common/Error.js","webpack:///src/js/components/common/Footer.js","webpack:///src/js/components/common/Header.js","webpack:///src/js/components/common/Loader.js","webpack:///src/js/components/modules/ArtInfo.js","webpack:///src/js/components/modules/ArtRecord.js","webpack:///src/js/components/modules/index.js","webpack:///src/js/models/Art.js","webpack:///src/js/models/ArtRecord.js","webpack:///src/js/models/Artist.js","webpack:///src/js/reducers/art.js","webpack:///src/js/reducers/index.js","webpack:///./src/scss/main.scss","webpack:///src/js/lib/Highlighter.js","webpack:///src/js/components/modules/Search.js","webpack:///src/js/ActionConstants.js","webpack:///src/js/components/common/index.js","webpack:///src/js/models/index.js"],"sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\nimport App from './components/App';\n\nrequire('../scss/main.scss');\n\nrender(<App />, document.getElementById('appRoot'));\n\n\n\n// WEBPACK FOOTER //\n// src/js/app.js","import ActionConstants from '../ActionConstants';\nimport {Art} from '../models';\n\n\n/**\n * @param  {Boolean} isFetching\n * @param  {?Object}  error\n *\n * @return {Object}\n */\nexport function updateApiState(isFetching, error = null) {\n    return {\n        type: ActionConstants.UPDATE_API_STATE,\n        isFetching,\n        error\n    };\n}\n\n/**\n * Action creator for storing the received art info in redux stores\n *\n * @param  {String} id  Permanent art id\n * @param  {Object} art\n *\n * @return {Object}\n */\nexport function storeArtInfo(id, art) {\n    return {\n        type: ActionConstants.STORE_ART_INFO,\n        id,\n        art\n    };\n}\n\n\n/**\n * Async action creator for fetching artwork info from API\n *\n * @param  {String} id Permanent id of art\n *\n * @return {Thunk}\n */\nexport function fetchArtInfo(id) {\n    return (dispatch) => {\n        dispatch(updateApiState(true));\n\n        return window.fetch(`https://gist.githubusercontent.com/jstaffans/2dd13eaeef667a5ea8cd7b1ac8d39b6c/raw/aa3722ed73fe5836a8c5353476bb34f3a7a2a1a0/${id}.json`)\n            .then(res => {\n                return res.json();\n            })\n            .then(data => {\n                dispatch(updateApiState(false));\n                dispatch(storeArtInfo(id, new Art(data)));\n            })\n            .catch(err => {\n                dispatch(updateApiState(false, err));\n            });\n    };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// src/js/actions/ArtActions.js","import * as ArtActions from './ArtActions';\nexport {ArtActions as ArtActions};\n\n\n\n// WEBPACK FOOTER //\n// src/js/actions/index.js","import React from 'react';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport * as reducers from '../reducers';\nimport Container from './Container';\n\n\nconst store = createStore(\n    combineReducers(reducers),\n    applyMiddleware(thunkMiddleware)\n);\n\n\nexport default function App() {\n    return (\n        <Provider store={store}>\n            <Container />\n        </Provider>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/App.js","import React, {Component} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {ArtActions} from '../actions';\n\nimport {ArtInfo, ArtRecord, Search} from './modules';\nimport {Loader, Error} from './common';\n\n\nclass ArtPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    componentDidMount() {\n        this.props.actions.fetchArtInfo(this.props.artId);\n    }\n\n\n    render() {\n        if (this.props.apiStatus.isFetching) {\n            return <Loader />;\n        }\n\n        if (this.props.apiStatus.error) {\n            return <Error error={this.props.apiStatus.error} />;\n        }\n\n        if (!this.props.art) {\n            return null;\n        }\n\n        return (\n            <div className=\"container page-art\">\n                <Search />\n                <div id=\"js-searchContainer\">\n                    <ArtInfo art={this.props.art} />\n                    <div className=\"art-section art-section--secondary\">\n                        {\n                            ['provenance', 'exhibition', 'literature'].map(r => {\n                                return (\n                                    <ArtRecord\n                                        key={r}\n                                        type={r}\n                                        art={this.props.art}\n                                    />\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default connect(\n    (state, props) => {\n        const artId = props.artId;\n        const art = state.art.arts[props.artId];\n        const apiStatus = state.art.apiStatus;\n\n        return {\n            artId,\n            art,\n            apiStatus\n        };\n    },\n    (dispatch) => ({\n        actions: bindActionCreators(ArtActions, dispatch)\n    })\n)(ArtPage);\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/ArtPage.js","import React from 'react';\nimport {Header, Footer} from './common';\nimport ArtPage from './ArtPage';\n\n\nexport default function Container() {\n    return (\n        <div>\n            <Header />\n            <div className=\"container\">\n                <ArtPage artId=\"CAA-KZA\" />\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/Container.js","import React from 'react';\n\nexport default function Error(props) {\n    return (\n        <div className=\"error\">\n            <i className=\"fa fa-exclamation-triangle error__icon\" />\n            <span className=\"error__text\">{props.error.message}</span>\n        </div>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/common/Error.js","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\"><i className=\"fa fa-smile-o\" /></footer>\n    );\n}\n\nexport default Footer;\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/common/Footer.js","import React from 'react';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <div className=\"header__brand\">Artilla</div>\n        </header>\n    );\n}\n\nexport default Header;\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/common/Header.js","import React from 'react';\n\nexport default function Loader() {\n    return (\n        <div className=\"loader\">\n            <i className=\"fa fa-circle-o-notch fa-spin loader__icon\" />\n            <span className=\"loader__text\">Loading</span>\n        </div>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/common/Loader.js","import React from 'react';\n\nexport default function ArtInfo(props) {\n    return (\n        <div className=\"art-section art-section--primary\">\n            <div className=\"art-image\">\n                <img\n                    src={props.art.image}\n                    title={props.art.name}\n                    alt={`Image of ${props.art.name}`}\n                />\n            </div>\n            <div className=\"art-info\">\n                <h1 className=\"art-name\">{props.art.name}</h1>\n                <ul className=\"art-meta-list\">\n                    <li className=\"art-meta-list__item\">\n                        <span className=\"type\">Artist</span>{props.art.artist.getFullName()} ({props.art.artist.lifetime})\n                    </li>\n                    <li className=\"art-meta-list__item\">\n                        <span className=\"type\">Creation Time</span>{props.art.creationTime}\n                    </li>\n                    <li className=\"art-meta-list__item\">\n                        <span className=\"type\">Medium</span>{props.art.medium}\n                    </li>\n                    <li className=\"art-meta-list__item\">\n                        <span className=\"type\">Dimensions</span>{props.art.getDimensionsString()}\n                    </li>\n                    <li className=\"art-meta-list__item\">\n                        <span className=\"type\">Signature</span>{props.art.signature}\n                    </li>\n                </ul>\n                <button className=\"btn art-action\">View entire catalogue</button>\n            </div>\n        </div>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/modules/ArtInfo.js","import React from 'react';\n\nexport default function ArtRecord(props) {\n    const recordType = props.type;\n\n    let title = null;\n\n    switch (recordType) {\n        case 'provenance':\n            title = 'Provenance';\n            break;\n\n        case 'exhibition':\n            title = 'Exhibitions';\n            break;\n\n        case 'literature':\n            title = 'Literature';\n            break;\n\n        default:\n            break;\n    }\n\n    const records = props.art.getRecordsByType(recordType);\n\n    if (!records.length || !title) {\n        return null;\n    }\n\n    return (\n        <div className=\"art-record\">\n            <h3 className=\"art-record__title\">{title}</h3>\n            <ul className=\"art-record__list\">\n                {\n                    records.map((r, i) => {\n                        return (\n                            <li\n                                key={i}\n                                className=\"art-record__list__item\"\n                            >\n                                {r.displayText}\n                            </li>\n                        );\n                    })\n                }\n            </ul>\n        </div>\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/modules/ArtRecord.js","import ArtInfo from './ArtInfo';\nexport {ArtInfo as ArtInfo};\n\nimport ArtRecord from './ArtRecord';\nexport {ArtRecord as ArtRecord};\n\nimport Search from './Search';\nexport {Search as Search};\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/modules/index.js","import {Artist, ArtRecord} from '../models';\n\nexport default class Art {\n    constructor(art) {\n        /**\n         * @type {String}\n         */\n        this.id = art.permanent_id;\n\n        /**\n         * @type {String}\n         */\n        this.name = art.name;\n\n        /**\n         * @type {String}\n         */\n        this.medium = art.medium;\n\n        /**\n         * @type {String}\n         */\n        this.creationTime = art.creation.string;\n\n        /**\n         * @type {Object}\n         */\n        this.dimensions = art.dimensions;\n\n        /**\n         * @type {String}\n         */\n        this.signature = art.signature;\n\n        /**\n         * @type {String}\n         */\n        this.image = art.image_pyramid_urls.orig.img;\n\n        /**\n         * @type {Artist}\n         */\n        this.artist = new Artist(art.artist);\n\n\n        /**\n         * @type {Array<ArtRecord>}\n         */\n        this.records = art.record_set.map(r => new ArtRecord(r));\n    }\n\n\n    /**\n     * @param  {String} type\n     * @return {Array}\n     */\n    getRecordsByType(type) {\n        return this.records.filter(r => r.type.toLowerCase() === type.toLowerCase());\n    }\n\n\n    /**\n     * @return {String}\n     */\n    getDimensionsString() {\n        return `${this.dimensions.width}in x ${this.dimensions.height}in`;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/models/Art.js","export default class ArtRecord {\n    constructor(record) {\n        /**\n         * @type {String}\n         */\n        this.type = record.type;\n\n        /**\n         * @type {String}\n         */\n        this.displayText = record.display_text || record.full_text;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/models/ArtRecord.js","export default class Artist {\n    constructor(artist) {\n        /**\n         * @type {String}\n         */\n        this.id = artist.permanent_id;\n\n        /**\n         * @type {String}\n         */\n        this.fname = artist.first_names;\n\n        /**\n         * @type {String}\n         */\n        this.lname = artist.last_name;\n\n        /**\n         * @type {String}\n         */\n        this.lifetime = artist.lifetime;\n    }\n\n\n    getFullName() {\n        return `${this.fname} ${this.lname}`;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/models/Artist.js","import ActionConstants from '../ActionConstants';\n\nconst initialState = {\n    apiStatus: {\n        isFetching: false,\n        error: null\n    },\n    arts: {}\n};\n\nexport default function form(state = initialState, action) {\n    let arts;\n    let apiStatus;\n\n    switch (action.type) {\n        case ActionConstants.UPDATE_API_STATE:\n            apiStatus = {...state.apiStatus};\n            apiStatus = {\n                ...apiStatus,\n                isFetching: action.isFetching,\n                error: action.error\n            };\n\n            return {\n                ...state,\n                apiStatus\n            };\n\n\n        case ActionConstants.STORE_ART_INFO:\n            arts = {...state.arts};\n\n            arts[action.id] = action.art;\n\n            return {\n                ...state,\n                arts\n            };\n\n\n        default:\n            return state;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/reducers/art.js","import art from './art';\nexport {art as art};\n\n\n\n// WEBPACK FOOTER //\n// src/js/reducers/index.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scss/main.scss\n// module id = 119\n// module chunks = 0","\n// Highlights array to hold each new span element\nlet highlights = [];\n\n\n/* It is not possible to get certain styles set in css such as display using\nthe normal javascript. So we have to use this function taken from:\nhttp://www.quirksmode.org/dom/getstyles.html */\nfunction _getStyle(el, styleProp) {\n    // if el is a string of the id or the actual object of the element\n    const x = (document.getElementById(el)) ? document.getElementById(el) : el;\n    let y;\n\n    if (x.currentStyle) {\n        y = x.currentStyle[styleProp];\n    } else if (window.getComputedStyle) {\n        y = document.defaultView.getComputedStyle(x, null).getPropertyValue(styleProp);\n    }\n\n    return y;\n}\n\n\nfunction highlight(word, highlightClass = 'fts-highlight', node = document.body) {\n    for (node = node.firstChild; node; node = node.nextSibling) {\n        // Text node check\n        if (node.nodeType === 3) {\n            const n = node;\n            const position = n.nodeValue.toLowerCase().indexOf(word.toLowerCase());\n\n            if (position > -1) {\n                const before = n.nodeValue.substr(0, position); // split into a part before the match\n                const middle = n.nodeValue.substr(position, word.length); // the matched word to preserve case\n                const after = document.createTextNode(n.nodeValue.substr(position + word.length)); // and the part after the match\n                const highlightElem = document.createElement('span'); // create a span in the middle\n\n                highlightElem.className = highlightClass;\n\n                highlightElem.appendChild(document.createTextNode(middle)); // insert word as textNode in new span\n                n.nodeValue = before; // Turn node data into before\n                n.parentNode.insertBefore(after, n.nextSibling); // insert after\n                n.parentNode.insertBefore(highlightElem, n.nextSibling); // insert new span\n\n                highlights.push(highlightElem);\n\n                node = node.nextSibling; // Advance to next node or we get stuck in a loop because we created a span (child)\n            }\n        } else if (node.nodeType === 1 && !_getStyle(node, 'visibility').match(/hidden/i) && !_getStyle(node, 'display').match(/none/i)) { // Dont search in hidden elements\n            highlight(word, highlightClass, node);\n        }\n    }\n}\n\n\nfunction unhighlight() {\n    highlights.forEach(node => {\n        const textNode = node.firstChild; // firstChild is the textnode in the highlighted span\n        const parentNode = node.parentNode; // the parent element of the highlighted span\n\n        // First replace each span with its text node nodeValue\n        if (parentNode) {\n            parentNode.replaceChild(textNode, node);\n            parentNode.normalize(); // Removes empty Text nodes, and joins adjacent Text nodes in an element\n        }\n    });\n\n    highlights = [];\n}\n\n\nexport default function(opts, cb) {\n    try {\n        unhighlight(); // Remove highlights of any previous finds\n\n        if (opts.query === '') {\n            cb(0);\n\n            return;\n        }\n\n        highlight(opts.query, opts.highlightClass, opts.searchContainer); // highlight all occurrences of search string\n        cb(highlights.length);\n    } catch (err) {\n        cb(0);\n        throw err;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/lib/Highlighter.js","import React, {PureComponent} from 'react';\nimport Highlighter from '../../lib/Highlighter';\n\nexport default class Search extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.onSearchInput = this.onSearchInput.bind(this);\n\n        this.state = {\n            isSearchActive: false,\n            count: 99\n        };\n    }\n\n\n    onSearchInput(e) {\n        const query = e.target.value;\n\n        const opts = {\n            query: query.length >= 3 ? query : '',\n            highlightClass: 'fts-highlight',\n            searchContainer: document.getElementById('js-searchContainer')\n        };\n\n        // Mutates the DOM\n        Highlighter(opts, (count) => {\n            this.setState({\n                isSearchActive: query.length >= 3,\n                count\n            });\n        });\n    }\n\n\n    render() {\n        return (\n            <div className=\"search-container\">\n                <div className=\"search-input-wrapper\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search in this page\"\n                        className=\"search-input\"\n                        onChange={this.onSearchInput}\n                    />\n                   <span className=\"search-result\">{this.state.isSearchActive ? `${this.state.count} found` : ''}</span>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/modules/Search.js","const actions = {\n    STORE_ART_INFO: 'STORE_ART_INFO',\n    UPDATE_API_STATE: 'UPDATE_API_STATE'\n};\n\nexport default actions;\n\n\n\n// WEBPACK FOOTER //\n// src/js/ActionConstants.js","import Header from './Header';\nexport {Header as Header};\n\nimport Footer from './Footer';\nexport {Footer as Footer};\n\nimport Loader from './Loader';\nexport {Loader as Loader};\n\nimport Error from './Error';\nexport {Error as Error};\n\n\n\n// WEBPACK FOOTER //\n// src/js/components/common/index.js","import ArtRecord from './ArtRecord';\nexport {ArtRecord as ArtRecord};\n\nimport Artist from './Artist';\nexport {Artist as Artist};\n\nimport Art from './Art';\nexport {Art as Art};\n\n\n\n// WEBPACK FOOTER //\n// src/js/models/index.js"],"mappings":";;;;;;AAAA;;;;;;;;ACUA;;;;;;;;ACVA;;;;;;;;ACcA;;;;;;;;ACdA;;;;;;;;ACKA;;;;;;;;ACHA;;;;;;;;ACFA;;;;;;;;ACAA;;;;;;;;ACEA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACFA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACUA;;;;;;;;ACVA;;;;;;;ACAA;;;;;;;;;;;;;;;;ACsEA;;;;;;;;ACtEA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;","sourceRoot":""}